/*
 * Metaculus API
 *
 * Welcome to the unofficial Rust client for the Metaculus API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Benjamin Manns <opensource@benmanns.com>
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReminderEnum {
    #[serde(rename = "REMINDER_ON_DATE")]
    OnDate,
    #[serde(rename = "REMINDER_ON_COMMENTS")]
    OnComments,
    #[serde(rename = "REMINDER_ON_OPEN")]
    OnOpen,
    #[serde(rename = "REMINDER_ON_RESOLUTION")]
    OnResolution,
    #[serde(rename = "REMINDER_ON_CP")]
    OnCp,
    #[serde(rename = "REMINDER_AFTER_TIME")]
    AfterTime,
    #[serde(rename = "REMINDER_ON_LIFETIME")]
    OnLifetime,
}

impl ToString for ReminderEnum {
    fn to_string(&self) -> String {
        match self {
            Self::OnDate => String::from("REMINDER_ON_DATE"),
            Self::OnComments => String::from("REMINDER_ON_COMMENTS"),
            Self::OnOpen => String::from("REMINDER_ON_OPEN"),
            Self::OnResolution => String::from("REMINDER_ON_RESOLUTION"),
            Self::OnCp => String::from("REMINDER_ON_CP"),
            Self::AfterTime => String::from("REMINDER_AFTER_TIME"),
            Self::OnLifetime => String::from("REMINDER_ON_LIFETIME"),
        }
    }
}

impl Default for ReminderEnum {
    fn default() -> ReminderEnum {
        Self::OnDate
    }
}
