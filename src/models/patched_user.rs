/*
 * Metaculus API
 *
 * Welcome to the unofficial Rust client for the Metaculus API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Benjamin Manns <opensource@benmanns.com>
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchedUser {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<i32>,
    #[serde(rename = "levelTitle", skip_serializing_if = "Option::is_none")]
    pub level_title: Option<String>,
    #[serde(rename = "date_joined", skip_serializing_if = "Option::is_none")]
    pub date_joined: Option<String>,
    #[serde(rename = "supporter_level", skip_serializing_if = "Option::is_none")]
    pub supporter_level: Option<i32>,
    #[serde(rename = "supporter_since", skip_serializing_if = "Option::is_none")]
    pub supporter_since: Option<String>,
    #[serde(rename = "formerly_known_as", skip_serializing_if = "Option::is_none")]
    pub formerly_known_as: Option<String>,
}

impl Default for PatchedUser {
    fn default() -> Self {
        Self::new()
    }
}

impl PatchedUser {
    #[must_use]
    pub fn new() -> PatchedUser {
        PatchedUser {
            id: None,
            url: None,
            username: None,
            level: None,
            level_title: None,
            date_joined: None,
            supporter_level: None,
            supporter_since: None,
            formerly_known_as: None,
        }
    }
}
