/*
 * Metaculus API
 *
 * Welcome to the unofficial Rust client for the Metaculus API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Benjamin Manns <opensource@benmanns.com>
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NotificationTypeEnum {
    #[serde(rename = "Q")]
    Q,
    #[serde(rename = "M")]
    M,
    #[serde(rename = "S")]
    S,
}

impl ToString for NotificationTypeEnum {
    fn to_string(&self) -> String {
        match self {
            Self::Q => String::from("Q"),
            Self::M => String::from("M"),
            Self::S => String::from("S"),
        }
    }
}

impl Default for NotificationTypeEnum {
    fn default() -> NotificationTypeEnum {
        Self::Q
    }
}
